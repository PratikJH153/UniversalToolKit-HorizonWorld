'use strict';
const { Horizon } = require('../');
const util = require('util');
const uuidv4 = require('uuid/v4');

const consumer = new Horizon({
	// Path where Horizon will load thrift, schemas and database files
	resourcesPath:'./consumer-resources'
});

// Handle CTRL+C
process.on('SIGINT', () => {
	// Disconnects all connected services
	consumer.disconnectServices().then(() => {
		// Deletes the resource path, you really don't need to do this
		return consumer.clearResources();	
	});
});

// Horizon emits log events which always have a Log class instance as argument
consumer.on('log', (log) => {

	console.log('LOG:', log.inspect());

}).addResourceProvider({ // Resources from local directory
	directory:'./assets',
	files:[
		'book.thrift',
		'book.schema.json'
	]
}).acquireResources().then(() => { // Loads resources from urls and directories
	// We only need the Thrift types and services definitions
	return consumer.compileThrift();
}).then(() => {
	// Connects to a service
	return consumer.connectService(consumer.Services.BookStorage, 'localhost', 50000);
}).then(() => {

	console.log('Consumer is connected');
	console.log(util.inspect(consumer.information().pools, false, null));

	console.log('Saving a book...');

	const book = new consumer.Types.Book({
		uuid:uuidv4(),
		category:'science',
		author:'Stephen Hawking',
		title:'A Briefer History of Time'
	});

	return consumer.Clients.BookStorage.save(book);

}).then((book) => {

	console.log('Book saved', book);

	console.log('Getting book by uuid');

	return consumer.Clients.BookStorage.get(book.uuid);

}).then((book) => {

	console.log('Book received', book);

	console.log('Finding book by category');

	return consumer.Clients.BookStorage.findByCategory(book.category);

}).then((books) => {

	console.log('Found books', books);

});